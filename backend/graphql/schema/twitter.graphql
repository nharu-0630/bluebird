scalar DateTime

type TwTweet {
  id: String
  user: TwUser
  fullText: String
  media: [TwMedia!]!
  createdAt: DateTime
  replyCount: Int
  retweetCount: Int
  quoteCount: Int
  retweeted: Boolean
  favoriteCount: Int
  favorited: Boolean
  bookmarkCount: Int
  bookmarked: Boolean
  lang: String
}

type TwMedia {
  id: String
  mediaKey: String
  expandedURL: String
  type: String
  thumbURL: String
  videoURL: String
}

type TwUser {
  id: String
  name: String
  screenName: String
  verified: Boolean
  blueVerified: Boolean
  description: String
  location: String
  birthday: DateTime
  createdAt: DateTime
  friendsCount: Int
  following: Boolean
  fastFollowersCount: Int
  followersCount: Int
  normalFollowersCount: Int
  followedBy: Boolean
  mediaCount: Int
  favouritesCount: Int
  listedCount: Int
  pinnedTweetIDs: [String!]!
  profileBannerURL: String
  profileImageURL: String
  statusesCount: Int
}

type TwTweets {
  tweets: [TwTweet!]!
  cursor: String
}

type TwUsers {
  users: [TwUser!]!
  cursor: String
}

extend type Query {
  twTweetByID(tweetID: String!): TwTweet
  twUserByScreenName(screenName: String!): TwUser
  twLikes(userID: String!, cursor: String): TwTweets
  twUserTweets(userID: String!, cursor: String): TwTweets
  twBookmarks(cursor: String): TwTweets
  twFollowers(userID: String!, cursor: String): TwUsers
  twFollowing(userID: String!, cursor: String): TwUsers
  twTweetDetail(tweetID: String!, cursor: String): TwTweets
}
