scalar DateTime

type TwitterTweet {
  id: String
  user: TwitterUser
  fullText: String
  media: [TwitterMedia]
  createdAt: DateTime
  replyCount: Int
  retweetCount: Int
  quoteCount: Int
  retweeted: Boolean
  favoriteCount: Int
  favorited: Boolean
  bookmarkCount: Int
  bookmarked: Boolean
  lang: String
}

type TwitterMedia {
  id: String
  mediaKey: String
  expandedURL: String
  type: String
  thumbURL: String
  videoURL: String
}

type TwitterUser {
  id: String
  name: String
  screenName: String
  verified: Boolean
  blueVerified: Boolean
  description: String
  location: String
  birthday: DateTime
  createdAt: DateTime
  friendsCount: Int
  following: Boolean
  fastFollowersCount: Int
  followersCount: Int
  normalFollowersCount: Int
  followedBy: Boolean
  mediaCount: Int
  favouritesCount: Int
  listedCount: Int
  pinnedTweetIDs: [String]
  profileBannerURL: String
  profileImageURL: String
  statusesCount: Int
}

type TweetConnection {
  tweets: [TwitterTweet]
  cursor: String
}

extend type Query {
  twitterTweet(tweetID: String!): TwitterTweet
  twitterUser(screenName: String!): TwitterUser
  twitterTweets(userID: String!, cursor: String): TweetConnection
  twitterLikes(userID: String!, cursor: String): TweetConnection
  twitterUserTweets(userID: String!, cursor: String): TweetConnection
  twitterBookmarks(cursor: String): TweetConnection
}
