package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
)

// PoIllust is the resolver for the poIllust field.
func (r *queryResolver) PoIllust(ctx context.Context, userID string, illustID string, password *string) (*PoIllust, error) {
	if password == nil {
		password = new(string)
	}
	illust, err := r.PoClient.FetchIllust(userID, illustID, *password)
	if err != nil {
		return nil, err
	}
	parsedImages := []*PoImage{}
	for _, image := range illust.Images {
		parsedImages = append(parsedImages, &PoImage{
			URL: image.ImageURL,
		})
	}
	return &PoIllust{
		UserID:      illust.UserID,
		UserName:    illust.UserName,
		IllustID:    illust.IllustID,
		Password:    illust.Password,
		Description: illust.Description,
		Images:      parsedImages,
	}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
