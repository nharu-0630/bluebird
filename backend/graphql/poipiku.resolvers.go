package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
)

// PoIllustByID is the resolver for the poIllustByID field.
func (r *queryResolver) PoIllustByID(ctx context.Context, userID string, illustID string, password *string) (*PoIllust, error) {
	if password == nil {
		password = new(string)
	}
	illust, err := r.PoClient.FetchIllust(userID, illustID, *password)
	if err != nil {
		return nil, err
	}
	formattedIllust := FormatIllust(*illust)
	return &formattedIllust, nil
}

// PoIllustsByID is the resolver for the poIllustsByID field.
func (r *queryResolver) PoIllustsByID(ctx context.Context, userID string, pageIdx *int) (*PoIllusts, error) {
	if pageIdx == nil {
		pageIdx = new(int)
	}
	illusts, err := r.PoClient.FetchIllusts(userID, *pageIdx)
	if err != nil {
		return nil, err
	}
	formattedIllusts := FormatIllusts(*illusts)
	return &formattedIllusts, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
