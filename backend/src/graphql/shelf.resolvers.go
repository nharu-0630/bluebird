package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
)

// CreateShelfItem is the resolver for the createShelfItem field.
func (r *mutationResolver) CreateShelfItem(ctx context.Context, name string, categoryUlid string, tags []string, locationUlid string, description string) (*ShelfItem, error) {
	// ulid := ulid.MustNew(ulid.Timestamp(time.Now()), nil)
	// shelfCategory := model.ShelfCategory{}
	// r.DB.Where("ulid = ?", categoryUlid).First(&shelfCategory)
	// shelfTags := []model.ShelfTag{}
	// r.DB.Where("ulid IN (?)", tags).Find(&shelfTags)
	// var parsedShelfTags []ShelfTag
	// linq.From(shelfTags).SelectT(func(tag model.ShelfTag) ShelfTag {
	// 	return ShelfTag{Ulid: tag.ULID, Name: tag.Name}
	// }).ToSlice(&parsedShelfTags)
	// shelfLocation := model.ShelfLocation{}
	// r.DB.Where("ulid = ?", locationUlid).First(&shelfLocation)
	// r.DB.Create(&model.ShelfItem{
	// 	ULID:        ulid.String(),
	// 	Name:        name,
	// 	CategoryID:  shelfCategory.ID,
	// 	Tags:        shelfTags,
	// 	LocationID:  shelfLocation.ID,
	// 	Description: description,
	// })
	// return &ShelfItem{
	// 	Ulid:     ulid.String(),
	// 	Name:     name,
	// 	Category: &ShelfCategory{Ulid: shelfCategory.ULID, Name: shelfCategory.Name},
	// 	// Tags:        parsedShelfTags,
	// 	Location:    &ShelfLocation{Ulid: shelfLocation.ULID, Name: shelfLocation.Name},
	// 	Description: description,
	// }, nil
	panic(fmt.Errorf("not implemented: CreateShelfItem - createShelfItem"))
}

// UpdateShelfItem is the resolver for the updateShelfItem field.
func (r *mutationResolver) UpdateShelfItem(ctx context.Context, ulid string, name *string, categoryUlid *string, tags []string, locationUlid *string, description *string) (*ShelfItem, error) {
	panic(fmt.Errorf("not implemented: UpdateShelfItem - updateShelfItem"))
}

// DeleteShelfItem is the resolver for the deleteShelfItem field.
func (r *mutationResolver) DeleteShelfItem(ctx context.Context, ulid string) (*ShelfItem, error) {
	panic(fmt.Errorf("not implemented: DeleteShelfItem - deleteShelfItem"))
}

// CreateShelfCategory is the resolver for the createShelfCategory field.
func (r *mutationResolver) CreateShelfCategory(ctx context.Context, name string) (*ShelfCategory, error) {
	panic(fmt.Errorf("not implemented: CreateShelfCategory - createShelfCategory"))
}

// UpdateShelfCategory is the resolver for the updateShelfCategory field.
func (r *mutationResolver) UpdateShelfCategory(ctx context.Context, ulid string, name *string) (*ShelfCategory, error) {
	panic(fmt.Errorf("not implemented: UpdateShelfCategory - updateShelfCategory"))
}

// DeleteShelfCategory is the resolver for the deleteShelfCategory field.
func (r *mutationResolver) DeleteShelfCategory(ctx context.Context, ulid string) (*ShelfCategory, error) {
	panic(fmt.Errorf("not implemented: DeleteShelfCategory - deleteShelfCategory"))
}

// CreateShelfTag is the resolver for the createShelfTag field.
func (r *mutationResolver) CreateShelfTag(ctx context.Context, name string) (*ShelfTag, error) {
	panic(fmt.Errorf("not implemented: CreateShelfTag - createShelfTag"))
}

// UpdateShelfTag is the resolver for the updateShelfTag field.
func (r *mutationResolver) UpdateShelfTag(ctx context.Context, ulid string, name *string) (*ShelfTag, error) {
	panic(fmt.Errorf("not implemented: UpdateShelfTag - updateShelfTag"))
}

// DeleteShelfTag is the resolver for the deleteShelfTag field.
func (r *mutationResolver) DeleteShelfTag(ctx context.Context, ulid string) (*ShelfTag, error) {
	panic(fmt.Errorf("not implemented: DeleteShelfTag - deleteShelfTag"))
}

// CreateShelfLocation is the resolver for the createShelfLocation field.
func (r *mutationResolver) CreateShelfLocation(ctx context.Context, name string) (*ShelfLocation, error) {
	panic(fmt.Errorf("not implemented: CreateShelfLocation - createShelfLocation"))
}

// UpdateShelfLocation is the resolver for the updateShelfLocation field.
func (r *mutationResolver) UpdateShelfLocation(ctx context.Context, ulid string, name *string) (*ShelfLocation, error) {
	panic(fmt.Errorf("not implemented: UpdateShelfLocation - updateShelfLocation"))
}

// DeleteShelfLocation is the resolver for the deleteShelfLocation field.
func (r *mutationResolver) DeleteShelfLocation(ctx context.Context, ulid string) (*ShelfLocation, error) {
	panic(fmt.Errorf("not implemented: DeleteShelfLocation - deleteShelfLocation"))
}

// ShelfItems is the resolver for the shelfItems field.
func (r *queryResolver) ShelfItems(ctx context.Context) ([]*ShelfItem, error) {
	panic(fmt.Errorf("not implemented: ShelfItems - shelfItems"))
}

// ShelfItem is the resolver for the shelfItem field.
func (r *queryResolver) ShelfItem(ctx context.Context, ulid string) (*ShelfItem, error) {
	panic(fmt.Errorf("not implemented: ShelfItem - shelfItem"))
}

// ShelfCategories is the resolver for the shelfCategories field.
func (r *queryResolver) ShelfCategories(ctx context.Context) ([]*ShelfCategory, error) {
	panic(fmt.Errorf("not implemented: ShelfCategories - shelfCategories"))
}

// ShelfCategory is the resolver for the shelfCategory field.
func (r *queryResolver) ShelfCategory(ctx context.Context, ulid string) (*ShelfCategory, error) {
	panic(fmt.Errorf("not implemented: ShelfCategory - shelfCategory"))
}

// ShelfTags is the resolver for the shelfTags field.
func (r *queryResolver) ShelfTags(ctx context.Context) ([]*ShelfTag, error) {
	panic(fmt.Errorf("not implemented: ShelfTags - shelfTags"))
}

// ShelfTag is the resolver for the shelfTag field.
func (r *queryResolver) ShelfTag(ctx context.Context, ulid string) (*ShelfTag, error) {
	panic(fmt.Errorf("not implemented: ShelfTag - shelfTag"))
}

// ShelfLocations is the resolver for the shelfLocations field.
func (r *queryResolver) ShelfLocations(ctx context.Context) ([]*ShelfLocation, error) {
	panic(fmt.Errorf("not implemented: ShelfLocations - shelfLocations"))
}

// ShelfLocation is the resolver for the shelfLocation field.
func (r *queryResolver) ShelfLocation(ctx context.Context, ulid string) (*ShelfLocation, error) {
	panic(fmt.Errorf("not implemented: ShelfLocation - shelfLocation"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
